import flixel.FlxG;
import funkin.play.stage.Stage;
import funkin.graphics.shaders.AdjustColorShader;

class SkidsAtticEvilStage extends Stage
{
	function new()
	{
		super('skidsAtticEvil');
	}

  var colorShaderBf:AdjustColorShader;
  var colorShaderDad:AdjustColorShader;

	public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);
	}

	function buildStage()
	{
		super.buildStage();

    colorShaderBf = new AdjustColorShader();
    colorShaderDad = new AdjustColorShader();
	
	if (FlxG.save.data.spookyShaders != false)
	{
		colorShaderBf.brightness = -39;
		colorShaderBf.contrast = -1;
		colorShaderBf.saturation = -2;
		colorShaderBf.hue = -40;

		colorShaderDad.brightness = -31;
		colorShaderDad.contrast = -16;
		colorShaderDad.saturation = 0;
		colorShaderDad.hue = -28;

		getNamedProp('glow').blend = 0;
	}

	}

	function onUpdate(event:UpdateScriptEvent):Void
	{
		super.onUpdate(event);
		
		if (FlxG.save.data.spookyShaders != false)
		{
			if(getBoyfriend() != null && getBoyfriend().shader == null)
			{
				getBoyfriend().shader = colorShaderBf;
				getDad().shader = colorShaderDad;
			}
		}
		else
		{
			if(getBoyfriend() != null)
			{
				getBoyfriend().color = 0xFFA8B3;
				getDad().color = 0xFFA8B3;
			}
		}

	}

	override function onGameOver(event:ScriptEvent):Void {
		super.onGameOver(event);
		
		if (FlxG.save.data.spookyShaders != false)
			getBoyfriend().shader = null;
		else
			getBoyfriend().color = 0xFFFFFF;
	}

	override function onSongRetry(event:ScriptEvent):Void {
		super.onSongRetry(event);
		
		if (FlxG.save.data.spookyShaders != false)
			getBoyfriend().shader = colorShaderBf;
		else
			getBoyfriend().color = 0xFFA8B3;
	}

	function onBeatHit(event:SongTimeScriptEvent):Void
	{
		super.onBeatHit(event);
	}

  function onStepHit(event:SongTimeScriptEvent):Void
	{
		super.onStepHit(event);
	}
}
